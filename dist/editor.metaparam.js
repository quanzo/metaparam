(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Metaparam"] = factory();
	else
		root["Metaparam"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/index.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/index.css ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \".cdx-metaparam {\\n  position: relative;\\n  background-color: #eee;\\n  padding: 0.5em;\\n}\\n\\n.cdx-metaparam [contentEditable=true][data-placeholder]::before{\\n  position: absolute;\\n  content: attr(data-placeholder);\\n  color: #707684;\\n  font-weight: normal;\\n  opacity: 0;\\n}\\n\\n.cdx-metaparam [contentEditable=true][data-placeholder]:empty::before {\\n  opacity: 1;\\n}\\n\\n.cdx-metaparam [contentEditable=true][data-placeholder]:empty:focus::before {\\n  opacity: 0;\\n}\\n\\n\\n.cdx-metaparam::before {\\n  content: 'Meta parameters';\\n  display: block;\\n  padding: 0.5em 0;\\n}\\n\\n@media all and (max-width: 735px) {\\n  .cdx-metaparam::before {\\n    display: none;\\n  }\\n}\\n\\n.cdx-metaparam__description {\\n  min-height: 85px;\\n}\\n\\n.cdx-metaparam__title {\\n  margin-bottom: 6px;\\n}\\n\\n.cdx-metaparam__keywords {\\n  min-height: 85px;\\n}\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack://Metaparam/./src/index.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack://Metaparam/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack://Metaparam/./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack://Metaparam/./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js!./index.css */ \"./node_modules/css-loader/dist/cjs.js!./src/index.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://Metaparam/./src/index.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Metaparam; });\n/* harmony import */ var _svg_toolbox_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./svg/toolbox.svg */ \"./src/svg/toolbox.svg\");\n/* harmony import */ var _svg_toolbox_svg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_svg_toolbox_svg__WEBPACK_IMPORTED_MODULE_0__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Build styles\n */\n__webpack_require__(/*! ./index.css */ \"./src/index.css\").toString();\n/**\n * Import Tool's icon\n */\n\n\n\n/**\n * @class Metaparam\n * @classdesc Metaparam Tool for Editor.js\n * @property {MetaparamData} data - Metaparam Tool`s input and output data\n * @property {object} api - Editor.js API instance\n *\n * @typedef {object} MetaparamData\n * @description Metaparam Tool`s input and output data\n * @property {string} title - Meta title\n * @property {string} description - Meta description\n * @property {string} keywords - Meta keywords \n *\n * @typedef {object} MetaparamConfig\n * @description Metaparam Tool`s initial configuration\n * @property {string} titlePlaceholder - placeholder to show in Metaparam`s title input\n * @property {string} descriptionPlaceholder - placeholder to show in Metaparam`s description input\n * @property {string} keywordsPlaceholder - placeholder to show in Metaparam`s description input\n * \n */\n\nvar Metaparam =\n/*#__PURE__*/\nfunction () {\n  _createClass(Metaparam, [{\n    key: \"CSS\",\n\n    /**\n     * Metaparam Tool`s styles\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return {\n        baseClass: this.api.styles.block,\n        wrapper: 'cdx-metaparam',\n        input: this.api.styles.input,\n        title: 'cdx-metaparam__title',\n        description: 'cdx-metaparam__description',\n        keywords: 'cdx-metaparam__keywords'\n      };\n    }\n    /**\n     * Render plugin`s main Element and fill it with saved data\n     *\n     * @param {MetaparamData} data — previously saved data\n     * @param {MetaparamConfig} config — user config for Tool\n     * @param {Object} api - Editor.js API\n     */\n\n  }], [{\n    key: \"toolbox\",\n\n    /**\n     * Get Toolbox settings\n     *\n     * @public\n     * @return {string}\n     */\n    get: function get() {\n      return {\n        icon: _svg_toolbox_svg__WEBPACK_IMPORTED_MODULE_0___default.a,\n        title: 'Metaparam'\n      };\n    }\n    /**\n     * Allow to press Enter inside the Metaparam\n     * @public\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"enableLineBreaks\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Default placeholder for Metaparam title\n     *\n     * @public\n     * @returns {string}\n     */\n\n  }, {\n    key: \"DEFAULT_TITLE_PLACEHOLDER\",\n    get: function get() {\n      return 'Title';\n    }\n    /**\n     * Default placeholder for Metaparam description\n     *\n     * @public\n     * @returns {string}\n     */\n\n  }, {\n    key: \"DEFAULT_DESCRIPTION_PLACEHOLDER\",\n    get: function get() {\n      return 'Description';\n    }\n    /**\n     * Default placeholder for Metaparam description\n     *\n     * @public\n     * @returns {string}\n     */\n\n  }, {\n    key: \"DEFAULT_KEYWORDS_PLACEHOLDER\",\n    get: function get() {\n      return 'Keywords';\n    }\n  }]);\n\n  function Metaparam(_ref) {\n    var data = _ref.data,\n        config = _ref.config,\n        api = _ref.api;\n\n    _classCallCheck(this, Metaparam);\n\n    this.api = api;\n    this.titlePlaceholder = config.titlePlaceholder || Metaparam.DEFAULT_TITLE_PLACEHOLDER;\n    this.descriptionPlaceholder = config.descriptionPlaceholder || Metaparam.DEFAULT_DESCRIPTION_PLACEHOLDER;\n    this.keywordsPlaceholder = config.keywordsPlaceholder || Metaparam.DEFAULT_KEYWORDS_PLACEHOLDER;\n    this.data = {\n      title: data.title || '',\n      description: data.description || '',\n      keywords: data.keywords || ''\n    };\n  }\n  /**\n   * Create Metaparam Tool container with inputs\n   *\n   * @returns {Element}\n   */\n\n\n  _createClass(Metaparam, [{\n    key: \"render\",\n    value: function render() {\n      var container = this._make('div', [this.CSS.baseClass, this.CSS.wrapper]);\n\n      var title = this._make('div', [this.CSS.input, this.CSS.title], {\n        contentEditable: true,\n        innerHTML: this.data.title\n      });\n\n      var description = this._make('div', [this.CSS.input, this.CSS.description], {\n        contentEditable: true,\n        innerHTML: this.data.description\n      });\n\n      var keywords = this._make('div', [this.CSS.input, this.CSS.keywords], {\n        contentEditable: true,\n        innerHTML: this.data.keywords\n      });\n\n      title.dataset.placeholder = this.titlePlaceholder;\n      description.dataset.placeholder = this.descriptionPlaceholder;\n      keywords.dataset.placeholder = this.keywordsPlaceholder;\n      container.appendChild(title);\n      container.appendChild(description);\n      container.appendChild(keywords);\n      return container;\n    }\n    /**\n     * Extract Metaparam data from Metaparam Tool element\n     *\n     * @param {HTMLDivElement} MetaparamElement - element to save\n     * @returns {MetaparamData}\n     */\n\n  }, {\n    key: \"save\",\n    value: function save(MetaparamElement) {\n      var title = MetaparamElement.querySelector(\".\".concat(this.CSS.title));\n      var description = MetaparamElement.querySelector(\".\".concat(this.CSS.description));\n      var keywords = MetaparamElement.querySelector(\".\".concat(this.CSS.keywords));\n      return Object.assign(this.data, {\n        title: title.innerHTML,\n        description: description.innerHTML,\n        keywords: keywords.innerHTML\n      });\n    }\n    /**\n     * Helper for making Elements with attributes\n     *\n     * @param  {string} tagName           - new Element tag name\n     * @param  {array|string} classNames  - list or name of CSS classname(s)\n     * @param  {Object} attributes        - any attributes\n     * @return {Element}\n     */\n\n  }, {\n    key: \"_make\",\n    value: function _make(tagName) {\n      var classNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var el = document.createElement(tagName);\n\n      if (Array.isArray(classNames)) {\n        var _el$classList;\n\n        (_el$classList = el.classList).add.apply(_el$classList, _toConsumableArray(classNames));\n      } else if (classNames) {\n        el.classList.add(classNames);\n      }\n\n      for (var attrName in attributes) {\n        el[attrName] = attributes[attrName];\n      }\n\n      return el;\n    }\n    /**\n     * Sanitizer config for Metaparam Tool saved data\n     * @return {Object}\n     */\n\n  }], [{\n    key: \"sanitize\",\n    get: function get() {\n      return {\n        title: {},\n        description: {},\n        keywords: {}\n      };\n    }\n  }]);\n\n  return Metaparam;\n}();\n\n\n\n//# sourceURL=webpack://Metaparam/./src/index.js?");

/***/ }),

/***/ "./src/svg/toolbox.svg":
/*!*****************************!*\
  !*** ./src/svg/toolbox.svg ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<svg version=\\\"1.2\\\" width=\\\"5.64mm\\\" height=\\\"6mm\\\" viewBox=\\\"0 0 564 600\\\" preserveAspectRatio=\\\"xMidYMid\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"28.222\\\" stroke-linejoin=\\\"round\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:ooo=\\\"http://xml.openoffice.org/svg/export\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:presentation=\\\"http://sun.com/xmlns/staroffice/presentation\\\" xmlns:smil=\\\"http://www.w3.org/2001/SMIL20/\\\" xmlns:anim=\\\"urn:oasis:names:tc:opendocument:xmlns:animation:1.0\\\" xml:space=\\\"preserve\\\"><defs class=\\\"ClipPathGroup\\\"><clipPath id=\\\"presentation_clip_path\\\" clipPathUnits=\\\"userSpaceOnUse\\\"><rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"564\\\" height=\\\"600\\\"></rect></clipPath><clipPath id=\\\"presentation_clip_path_shrink\\\" clipPathUnits=\\\"userSpaceOnUse\\\"><rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"563\\\" height=\\\"599\\\"></rect></clipPath></defs><defs><font id=\\\"EmbeddedFont_1\\\" horiz-adv-x=\\\"2048\\\"><font-face font-family=\\\"Liberation Sans embedded\\\" units-per-em=\\\"2048\\\" font-weight=\\\"normal\\\" font-style=\\\"normal\\\" ascent=\\\"1852\\\" descent=\\\"423\\\"></font><missing-glyph horiz-adv-x=\\\"2048\\\" d=\\\"M 0,0 L 2047,0 2047,2047 0,2047 0,0 Z\\\"></missing><glyph unicode=\\\"M\\\" horiz-adv-x=\\\"1350\\\" d=\\\"M 1366,0 L 1366,940 C 1366,1044 1369,1144 1375,1240 1342,1121 1313,1027 1287,960 L 923,0 789,0 420,960 364,1130 331,1240 334,1129 338,940 338,0 168,0 168,1409 419,1409 794,432 C 807,393 820,351 833,306 845,261 853,228 857,208 862,235 874,275 891,330 908,384 919,418 925,432 L 1293,1409 1538,1409 1538,0 1366,0 Z\\\"></glyph></font></defs><defs class=\\\"TextShapeIndex\\\"><g ooo:slide=\\\"id1\\\" ooo:id-list=\\\"id3 id4\\\"></g></defs><defs class=\\\"EmbeddedBulletChars\\\"><g id=\\\"bullet-char-template(57356)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 580,1141 L 1163,571 580,0 -4,571 580,1141 Z\\\"></path></g><g id=\\\"bullet-char-template(57354)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 8,1128 L 1137,1128 1137,0 8,0 8,1128 Z\\\"></path></g><g id=\\\"bullet-char-template(10146)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 174,0 L 602,739 174,1481 1456,739 174,0 Z M 1358,739 L 309,1346 659,739 1358,739 Z\\\"></path></g><g id=\\\"bullet-char-template(10132)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 2015,739 L 1276,0 717,0 1260,543 174,543 174,936 1260,936 717,1481 1274,1481 2015,739 Z\\\"></path></g><g id=\\\"bullet-char-template(10007)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 0,-2 C -7,14 -16,27 -25,37 L 356,567 C 262,823 215,952 215,954 215,979 228,992 255,992 264,992 276,990 289,987 310,991 331,999 354,1012 L 381,999 492,748 772,1049 836,1024 860,1049 C 881,1039 901,1025 922,1006 886,937 835,863 770,784 769,783 710,716 594,584 L 774,223 C 774,196 753,168 711,139 L 727,119 C 717,90 699,76 672,76 641,76 570,178 457,381 L 164,-76 C 142,-110 111,-127 72,-127 30,-127 9,-110 8,-76 1,-67 -2,-52 -2,-32 -2,-23 -1,-13 0,-2 Z\\\"></path></g><g id=\\\"bullet-char-template(10004)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 285,-33 C 182,-33 111,30 74,156 52,228 41,333 41,471 41,549 55,616 82,672 116,743 169,778 240,778 293,778 328,747 346,684 L 369,508 C 377,444 397,411 428,410 L 1163,1116 C 1174,1127 1196,1133 1229,1133 1271,1133 1292,1118 1292,1087 L 1292,965 C 1292,929 1282,901 1262,881 L 442,47 C 390,-6 338,-33 285,-33 Z\\\"></path></g><g id=\\\"bullet-char-template(9679)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 813,0 C 632,0 489,54 383,161 276,268 223,411 223,592 223,773 276,916 383,1023 489,1130 632,1184 813,1184 992,1184 1136,1130 1245,1023 1353,916 1407,772 1407,592 1407,412 1353,268 1245,161 1136,54 992,0 813,0 Z\\\"></path></g><g id=\\\"bullet-char-template(8226)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 346,457 C 273,457 209,483 155,535 101,586 74,649 74,723 74,796 101,859 155,911 209,963 273,989 346,989 419,989 480,963 531,910 582,859 608,796 608,723 608,648 583,586 532,535 482,483 420,457 346,457 Z\\\"></path></g><g id=\\\"bullet-char-template(8211)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M -4,459 L 1135,459 1135,606 -4,606 -4,459 Z\\\"></path></g><g id=\\\"bullet-char-template(61548)\\\" transform=\\\"scale(0.00048828125,-0.00048828125)\\\"><path d=\\\"M 173,740 C 173,903 231,1043 346,1159 462,1274 601,1332 765,1332 928,1332 1067,1274 1183,1159 1299,1043 1357,903 1357,740 1357,577 1299,437 1183,322 1067,206 928,148 765,148 601,148 462,206 346,322 231,437 173,577 173,740 Z\\\"></path></g></defs><defs class=\\\"TextEmbeddedBitmaps\\\"></defs><g><g id=\\\"id2\\\" class=\\\"Master_Slide\\\"><g id=\\\"bg-id2\\\" class=\\\"Background\\\"></g><g id=\\\"bo-id2\\\" class=\\\"BackgroundObjects\\\"></g></g></g><g class=\\\"SlideGroup\\\"><g><g id=\\\"container-id1\\\"><g id=\\\"id1\\\" class=\\\"Slide\\\" clip-path=\\\"url(#presentation_clip_path)\\\"><g class=\\\"Page\\\"><g class=\\\"com.sun.star.drawing.CustomShape\\\"><g id=\\\"id3\\\"><rect class=\\\"BoundingBox\\\" stroke=\\\"none\\\" fill=\\\"none\\\" x=\\\"97\\\" y=\\\"97\\\" width=\\\"407\\\" height=\\\"407\\\"></rect><path fill=\\\"rgb(255,255,255)\\\" stroke=\\\"none\\\" d=\\\"M 125,501 C 112,501 100,488 100,475 100,462 112,450 125,450 L 150,450 150,125 C 150,112 162,100 175,100 L 475,100 C 488,100 501,112 501,125 501,137 488,150 475,150 L 450,150 450,475 C 450,488 437,501 425,501 L 125,501 Z M 100,100 L 100,100 Z M 501,501 L 501,501 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 125,501 C 112,501 100,488 100,475 100,462 112,450 125,450 L 150,450 150,125 C 150,112 162,100 175,100 L 475,100 C 488,100 501,112 501,125 501,137 488,150 475,150 L 450,150 450,475 C 450,488 437,501 425,501 L 125,501 Z\\\"></path><path fill=\\\"rgb(204,204,204)\\\" stroke=\\\"none\\\" d=\\\"M 200,125 C 200,137 187,150 175,150 168,150 162,143 162,137 162,131 168,125 175,125 L 200,125 Z M 100,100 L 100,100 Z M 501,501 L 501,501 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 200,125 C 200,137 187,150 175,150 168,150 162,143 162,137 162,131 168,125 175,125 L 200,125 Z\\\"></path><path fill=\\\"rgb(204,204,204)\\\" stroke=\\\"none\\\" d=\\\"M 150,475 C 150,488 137,501 125,501 112,501 100,488 100,475 100,462 112,450 125,450 131,450 137,456 137,463 137,469 131,475 125,475 L 150,475 Z M 100,100 L 100,100 Z M 501,501 L 501,501 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 150,475 C 150,488 137,501 125,501 112,501 100,488 100,475 100,462 112,450 125,450 131,450 137,456 137,463 137,469 131,475 125,475 L 150,475 Z\\\"></path><path fill=\\\"rgb(204,204,204)\\\" stroke=\\\"none\\\" d=\\\"M 175,100 C 187,100 200,112 200,125 L 175,100 Z M 100,100 L 100,100 Z M 501,501 L 501,501 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 175,100 C 187,100 200,112 200,125\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 100,100 L 100,100 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 501,501 L 501,501 Z\\\"></path><path fill=\\\"rgb(204,204,204)\\\" stroke=\\\"none\\\" d=\\\"M 150,450 L 150,475 150,450 Z M 100,100 L 100,100 Z M 501,501 L 501,501 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 150,450 L 150,475\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 100,100 L 100,100 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 501,501 L 501,501 Z\\\"></path><path fill=\\\"rgb(204,204,204)\\\" stroke=\\\"none\\\" d=\\\"M 175,150 L 475,150 175,150 Z M 100,100 L 100,100 Z M 501,501 L 501,501 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 175,150 L 475,150\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 100,100 L 100,100 Z\\\"></path><path fill=\\\"none\\\" stroke=\\\"rgb(0,0,0)\\\" stroke-width=\\\"4\\\" stroke-linejoin=\\\"round\\\" d=\\\"M 501,501 L 501,501 Z\\\"></path></g></g><g class=\\\"com.sun.star.drawing.TextShape\\\"><g id=\\\"id4\\\"><rect class=\\\"BoundingBox\\\" stroke=\\\"none\\\" fill=\\\"none\\\" x=\\\"-60\\\" y=\\\"0\\\" width=\\\"736\\\" height=\\\"570\\\"></rect><text class=\\\"TextShape\\\"><tspan class=\\\"TextParagraph\\\" font-family=\\\"Liberation Sans, sans-serif\\\" font-size=\\\"282px\\\" font-weight=\\\"400\\\"><tspan class=\\\"TextPosition\\\" x=\\\"190\\\" y=\\\"383\\\"><tspan fill=\\\"rgb(0,0,0)\\\" stroke=\\\"none\\\">M</tspan></tspan></tspan></text></g></g></g></g></g></g></g></svg>\"\n\n//# sourceURL=webpack://Metaparam/./src/svg/toolbox.svg?");

/***/ })

/******/ })["default"];
});